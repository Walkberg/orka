// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id             String             @id @default(uuid())
  email          String             @unique
  password       String
  firstName      String?
  lastName       String?
  avatarUrl      String?
  createdAt      DateTime           @default(now())
  updatedAt      DateTime           @updatedAt

  applications   Application[]      @relation("UserApplications") 
  memberships    OrganizationMember[] 
  createdOrganizations Organization[] @relation("CreatedByUser")

  @@index([email])
  ApplicationUser ApplicationUser[]
}


model Application {
  id             String             @id @default(uuid())
  name           String
  description    String?
  apiKey         String             @unique
  createdAt      DateTime           @default(now())
  updatedAt      DateTime           @updatedAt

  ownerId        String
  owner          User               @relation("UserApplications", fields: [ownerId], references: [id])
  organizations  Organization[]
  users          ApplicationUser[]  

  @@index([ownerId])
}


model ApplicationUser {
  id             String             @id @default(uuid())
  userId         String
  appId          String
  joinedAt       DateTime           @default(now())

  user           User               @relation(fields: [userId], references: [id])
  app            Application        @relation(fields: [appId], references: [id])

  @@unique([userId, appId])
}


model Organization {
  id             String             @id @default(uuid())
  name           String
  description    String?
  logoUrl        String?
  createdAt      DateTime           @default(now())
  updatedAt      DateTime           @updatedAt

  createdBy      String
  createdByUser  User             @relation("CreatedByUser", fields: [createdBy], references: [id])

  applicationId  String
  application    Application        @relation(fields: [applicationId], references: [id])
  members        OrganizationMember[]
}


model OrganizationMember {
  id             String             @id @default(uuid())
  organizationId String
  userId         String
  joinedAt       DateTime           @default(now())

  user           User               @relation(fields: [userId], references: [id])
  organization   Organization       @relation(fields: [organizationId], references: [id])

  @@unique([organizationId, userId])
}




